<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\rvmdk\usb_dev_gamepad.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\rvmdk\usb_dev_gamepad.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Wed Feb 06 23:31:45 2019
<BR><P>
<H3>Maximum Stack Usage =        196 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USBDSetConfiguration &rArr; USBDeviceConfig &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[39]">Reset_Handler</a>
 <LI><a href="#[2]">NmiSR</a>
 <LI><a href="#[3]">FaultISR</a>
 <LI><a href="#[4]">IntDefaultHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NmiSR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NmiSR</a><BR>
 <LI><a href="#[3]">FaultISR</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">FaultISR</a><BR>
 <LI><a href="#[4]">IntDefaultHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">IntDefaultHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">DMAUSBIntHandler</a> from usbdma.o(i.DMAUSBIntHandler) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[14]">DMAUSBIntStatusClear</a> from usbdma.o(i.DMAUSBIntStatusClear) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[15]">DMAUSBStatus</a> from usbdma.o(i.DMAUSBStatus) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[3]">FaultISR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[0]">GamepadHandler</a> from usb_dev_gamepad.o(i.GamepadHandler) referenced 2 times from usb_gamepad_structs.o(.data)
 <LI><a href="#[9]">HIDGamepadRxHandler</a> from usbdhidgamepad.o(i.HIDGamepadRxHandler) referenced from usbdhidgamepad.o(i.USBDHIDGamepadCompositeInit)
 <LI><a href="#[8]">HIDGamepadTxHandler</a> from usbdhidgamepad.o(i.HIDGamepadTxHandler) referenced from usbdhidgamepad.o(i.USBDHIDGamepadCompositeInit)
 <LI><a href="#[7]">HIDTickHandler</a> from usbdhid.o(i.HIDTickHandler) referenced from usbdhid.o(i.USBDHIDCompositeInit)
 <LI><a href="#[30]">HandleConfigChange</a> from usbdhid.o(i.HandleConfigChange) referenced from usbdhid.o(.constdata)
 <LI><a href="#[38]">HandleDevice</a> from usbdhid.o(i.HandleDevice) referenced from usbdhid.o(.constdata)
 <LI><a href="#[36]">HandleDisconnect</a> from usbdhid.o(i.HandleDisconnect) referenced from usbdhid.o(.constdata)
 <LI><a href="#[31]">HandleEP0DataReceived</a> from usbdhid.o(i.HandleEP0DataReceived) referenced from usbdhid.o(.constdata)
 <LI><a href="#[32]">HandleEP0DataSent</a> from usbdhid.o(i.HandleEP0DataSent) referenced from usbdhid.o(.constdata)
 <LI><a href="#[37]">HandleEndpoints</a> from usbdhid.o(i.HandleEndpoints) referenced from usbdhid.o(.constdata)
 <LI><a href="#[2e]">HandleGetDescriptor</a> from usbdhid.o(i.HandleGetDescriptor) referenced from usbdhid.o(.constdata)
 <LI><a href="#[2f]">HandleRequest</a> from usbdhid.o(i.HandleRequest) referenced from usbdhid.o(.constdata)
 <LI><a href="#[33]">HandleReset</a> from usbdhid.o(i.HandleReset) referenced from usbdhid.o(.constdata)
 <LI><a href="#[35]">HandleResume</a> from usbdhid.o(i.HandleResume) referenced from usbdhid.o(.constdata)
 <LI><a href="#[34]">HandleSuspend</a> from usbdhid.o(i.HandleSuspend) referenced from usbdhid.o(.constdata)
 <LI><a href="#[4]">IntDefaultHandler</a> from startup_rvmdk.o(RESET) referenced 113 times from startup_rvmdk.o(RESET)
 <LI><a href="#[2]">NmiSR</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[39]">Reset_Handler</a> from startup_rvmdk.o(RESET) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[5]">USB0DeviceIntHandler</a> from usbdhandler.o(i.USB0DeviceIntHandler) referenced from startup_rvmdk.o(RESET)
 <LI><a href="#[24]">USBDClearFeature</a> from usbdenum.o(i.USBDClearFeature) referenced from usbdenum.o(.constdata)
 <LI><a href="#[29]">USBDGetConfiguration</a> from usbdenum.o(i.USBDGetConfiguration) referenced from usbdenum.o(.constdata)
 <LI><a href="#[27]">USBDGetDescriptor</a> from usbdenum.o(i.USBDGetDescriptor) referenced from usbdenum.o(.constdata)
 <LI><a href="#[2b]">USBDGetInterface</a> from usbdenum.o(i.USBDGetInterface) referenced from usbdenum.o(.constdata)
 <LI><a href="#[23]">USBDGetStatus</a> from usbdenum.o(i.USBDGetStatus) referenced from usbdenum.o(.constdata)
 <LI><a href="#[26]">USBDSetAddress</a> from usbdenum.o(i.USBDSetAddress) referenced from usbdenum.o(.constdata)
 <LI><a href="#[2a]">USBDSetConfiguration</a> from usbdenum.o(i.USBDSetConfiguration) referenced from usbdenum.o(.constdata)
 <LI><a href="#[28]">USBDSetDescriptor</a> from usbdenum.o(i.USBDSetDescriptor) referenced from usbdenum.o(.constdata)
 <LI><a href="#[25]">USBDSetFeature</a> from usbdenum.o(i.USBDSetFeature) referenced from usbdenum.o(.constdata)
 <LI><a href="#[2c]">USBDSetInterface</a> from usbdenum.o(i.USBDSetInterface) referenced from usbdenum.o(.constdata)
 <LI><a href="#[2d]">USBDSyncFrame</a> from usbdenum.o(i.USBDSyncFrame) referenced from usbdenum.o(.constdata)
 <LI><a href="#[18]">iDMAUSBArbSizeSet</a> from usbdma.o(i.iDMAUSBArbSizeSet) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[19]">iDMAUSBChannelAllocate</a> from usbdma.o(i.iDMAUSBChannelAllocate) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[21]">iDMAUSBChannelDisable</a> from usbdma.o(i.iDMAUSBChannelDisable) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[20]">iDMAUSBChannelEnable</a> from usbdma.o(i.iDMAUSBChannelEnable) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[1d]">iDMAUSBChannelIntDisable</a> from usbdma.o(i.iDMAUSBChannelIntDisable) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[1c]">iDMAUSBChannelIntEnable</a> from usbdma.o(i.iDMAUSBChannelIntEnable) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[1f]">iDMAUSBChannelRelease</a> from usbdma.o(i.iDMAUSBChannelRelease) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[1a]">iDMAUSBChannelStatus</a> from usbdma.o(i.iDMAUSBChannelStatus) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[1b]">iDMAUSBIntStatus</a> from usbdma.o(i.iDMAUSBIntStatus) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[1e]">iDMAUSBTransfer</a> from usbdma.o(i.iDMAUSBTransfer) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[22]">iDMAUSBUnitSizeSet</a> from usbdma.o(i.iDMAUSBUnitSizeSet) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[6]">main</a> from usb_dev_gamepad.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[a]">uDMAUSBArbSizeSet</a> from usbdma.o(i.uDMAUSBArbSizeSet) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[b]">uDMAUSBChannelAllocate</a> from usbdma.o(i.uDMAUSBChannelAllocate) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[c]">uDMAUSBChannelDisable</a> from usbdma.o(i.uDMAUSBChannelDisable) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[d]">uDMAUSBChannelEnable</a> from usbdma.o(i.uDMAUSBChannelEnable) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[f]">uDMAUSBChannelIntDisable</a> from usbdma.o(i.uDMAUSBChannelIntDisable) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[e]">uDMAUSBChannelIntEnable</a> from usbdma.o(i.uDMAUSBChannelIntEnable) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[10]">uDMAUSBChannelRelease</a> from usbdma.o(i.uDMAUSBChannelRelease) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[11]">uDMAUSBChannelStatus</a> from usbdma.o(i.uDMAUSBChannelStatus) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[13]">uDMAUSBIntStatus</a> from usbdma.o(i.uDMAUSBIntStatus) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[16]">uDMAUSBTransfer</a> from usbdma.o(i.uDMAUSBTransfer) referenced from usbdma.o(i.USBLibDMAInit)
 <LI><a href="#[17]">uDMAUSBUnitSizeSet</a> from usbdma.o(i.uDMAUSBUnitSizeSet) referenced from usbdma.o(i.USBLibDMAInit)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[39]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3a]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_Handler
</UL>

<P><STRONG><a name="[a6]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[3b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a7]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a8]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a9]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[aa]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[ab]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[4f]"></a>CPUcpsid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterDisable
</UL>

<P><STRONG><a name="[ac]"></a>CPUprimask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[51]"></a>CPUcpsie</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpu.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
</UL>

<P><STRONG><a name="[ad]"></a>CPUwfi</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[ae]"></a>CPUbasepriSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[af]"></a>CPUbasepriGet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu.o(.emb_text), UNUSED)

<P><STRONG><a name="[3c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[b0]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>ButtonsInit</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, usb_dev_gamepad.o(i.ButtonsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ButtonsInit &rArr; GetButtons
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReady
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetButtons
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PeripheralInit
</UL>

<P><STRONG><a name="[4c]"></a>ConfigurePins</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usb_dev_gamepad.o(i.ConfigurePins))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PeripheralInit
</UL>

<P><STRONG><a name="[0]"></a>GamepadHandler</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, usb_dev_gamepad.o(i.GamepadHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GamepadHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usb_gamepad_structs.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>GetButtons</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, usb_dev_gamepad.o(i.GetButtons))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GetButtons
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonsInit
</UL>

<P><STRONG><a name="[4b]"></a>Init_PeripheralInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, usb_dev_gamepad.o(i.Init_PeripheralInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Init_PeripheralInit &rArr; USBHIDInit &rArr; USBDHIDGamepadInit &rArr; USBDHIDInit &rArr; USBDHIDCompositeInit &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBHIDInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigurePins
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonsInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>Init_SystemInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usb_dev_gamepad.o(i.Init_SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Init_SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>IntDisable</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, interrupt.o(i.IntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelEnable
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelEnable
</UL>

<P><STRONG><a name="[71]"></a>IntEnable</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, interrupt.o(i.IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelEnable
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelEnable
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[90]"></a>IntIsEnabled</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, interrupt.o(i.IntIsEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelEnable
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelEnable
</UL>

<P><STRONG><a name="[4e]"></a>IntMasterDisable</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterDisable
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsid
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>IntMasterEnable</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, interrupt.o(i.IntMasterEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IntMasterEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPUcpsie
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>InternalUSBRegisterTickHandler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usbtick.o(i.InternalUSBRegisterTickHandler))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDCompositeInit
</UL>

<P><STRONG><a name="[89]"></a>InternalUSBStartOfFrameTick</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usbtick.o(i.InternalUSBStartOfFrameTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InternalUSBStartOfFrameTick
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>

<P><STRONG><a name="[6c]"></a>InternalUSBTickInit</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, usbtick.o(i.InternalUSBTickInit))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDCompositeInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[60]"></a>SysCtlPeripheralEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralEnable))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[3f]"></a>SysCtlPeripheralReady</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlPeripheralReady))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonsInit
</UL>

<P><STRONG><a name="[5f]"></a>SysCtlPeripheralReset</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, sysctl.o(i.SysCtlPeripheralReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysCtlPeripheralReset
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[61]"></a>SysCtlUSBPLLEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sysctl.o(i.SysCtlUSBPLLEnable))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[53]"></a>ULPIConfigSet</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, usbulpi.o(i.ULPIConfigSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ULPIConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBULPIRegWrite
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBULPIRegRead
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[5]"></a>USB0DeviceIntHandler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbdhandler.o(i.USB0DeviceIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = USB0DeviceIntHandler &rArr; USBDeviceIntHandlerInternal &rArr; USBDeviceEnumHandler &rArr; USBDEP0StateTxConfig &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntStatusControl
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>USBClockEnable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(i.USBClockEnable))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[8d]"></a>USBControllerVersion</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(i.USBControllerVersion))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBLibDMAInit
</UL>

<P><STRONG><a name="[58]"></a>USBDCDConfigDescGet</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, usbdcdesc.o(i.USBDCDConfigDescGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBDCDConfigDescGet &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDescGetNum
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDescGet
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
</UL>

<P><STRONG><a name="[5b]"></a>USBDCDConfigDescGetNum</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, usbdcdesc.o(i.USBDCDConfigDescGetNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USBDCDConfigDescGetNum &rArr; USBDescGetNum
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDescGetNum
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetInterface
</UL>

<P><STRONG><a name="[76]"></a>USBDCDConfigDescGetSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, usbdcdesc.o(i.USBDCDConfigDescGetSize))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetDescriptor
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTxConfig
</UL>

<P><STRONG><a name="[5c]"></a>USBDCDConfigGetInterface</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, usbdcdesc.o(i.USBDCDConfigGetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDescGetNum
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDescGet
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterfaceEndpoint
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetInterface
</UL>

<P><STRONG><a name="[5d]"></a>USBDCDConfigGetInterfaceEndpoint</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, usbdcdesc.o(i.USBDCDConfigGetInterfaceEndpoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDCompositeInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
</UL>

<P><STRONG><a name="[78]"></a>USBDCDDeviceInfoInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, usbdenum.o(i.USBDCDDeviceInfoInit))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDCompositeInit
</UL>

<P><STRONG><a name="[5e]"></a>USBDCDInit</STRONG> (Thumb, 370 bytes, Stack size 32 bytes, usbdenum.o(i.USBDCDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBDCDInit &rArr; ULPIConfigSet
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBOTGMode
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntEnableEndpoint
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntEnableControl
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalUSBTickInit
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntStatusControl
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlUSBPLLEnable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralReset
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysCtlPeripheralEnable
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBLibDMAInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ULPIConfigSet
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBULPIEnable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBULPIDisable
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBLPMIntEnable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntStatusEndpoint
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevMode
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevLPMEnable
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevLPMDisable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevLPMConfig
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevConnect
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBClockEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDInit
</UL>

<P><STRONG><a name="[49]"></a>USBDCDRequestDataEP0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbdenum.o(i.USBDCDRequestDataEP0))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleRequest
</UL>

<P><STRONG><a name="[47]"></a>USBDCDSendDataEP0</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbdenum.o(i.USBDCDSendDataEP0))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBDCDSendDataEP0 &rArr; USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleRequest
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleGetDescriptor
</UL>

<P><STRONG><a name="[48]"></a>USBDCDStallEP0</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, usbdenum.o(i.USBDCDStallEP0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBDCDStallEP0
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleRequest
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleGetDescriptor
</UL>

<P><STRONG><a name="[77]"></a>USBDHIDCompositeInit</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, usbdhid.o(i.USBDHIDCompositeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = USBDHIDCompositeInit &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalUSBTickInit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterfaceEndpoint
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalUSBRegisterTickHandler
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDDeviceInfoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDGamepadCompositeInit
</UL>

<P><STRONG><a name="[7a]"></a>USBDHIDGamepadCompositeInit</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, usbdhidgamepad.o(i.USBDHIDGamepadCompositeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USBDHIDGamepadCompositeInit &rArr; USBDHIDCompositeInit &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDCompositeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDGamepadInit
</UL>

<P><STRONG><a name="[7b]"></a>USBDHIDGamepadInit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, usbdhidgamepad.o(i.USBDHIDGamepadInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = USBDHIDGamepadInit &rArr; USBDHIDInit &rArr; USBDHIDCompositeInit &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDInit
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDGamepadCompositeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBHIDInit
</UL>

<P><STRONG><a name="[7d]"></a>USBDHIDGamepadSendReport</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, usbdhidgamepad.o(i.USBDHIDGamepadSendReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBDHIDGamepadSendReport &rArr; USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDTxPacketAvailable
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDReportWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>USBDHIDInit</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usbdhid.o(i.USBDHIDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USBDHIDInit &rArr; USBDHIDCompositeInit &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDCompositeInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDGamepadInit
</UL>

<P><STRONG><a name="[52]"></a>USBDHIDReportWrite</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, usbdhid.o(i.USBDHIDReportWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataSend
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDGamepadSendReport
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIdleTimers
</UL>

<P><STRONG><a name="[7e]"></a>USBDHIDTxPacketAvailable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbdhid.o(i.USBDHIDTxPacketAvailable))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDGamepadSendReport
</UL>

<P><STRONG><a name="[96]"></a>USBDMAChannelAddressSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(i.USBDMAChannelAddressSet))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBTransfer
</UL>

<P><STRONG><a name="[9a]"></a>USBDMAChannelConfigSet</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb.o(i.USBDMAChannelConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBTransfer
</UL>

<P><STRONG><a name="[97]"></a>USBDMAChannelCountSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(i.USBDMAChannelCountSet))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBTransfer
</UL>

<P><STRONG><a name="[8e]"></a>USBDMAChannelDisable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb.o(i.USBDMAChannelDisable))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelRelease
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelDisable
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelAllocate
</UL>

<P><STRONG><a name="[93]"></a>USBDMAChannelEnable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb.o(i.USBDMAChannelEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBTransfer
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelEnable
</UL>

<P><STRONG><a name="[8f]"></a>USBDMAChannelIntDisable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb.o(i.USBDMAChannelIntDisable))
<BR><BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelIntDisable
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelDisable
</UL>

<P><STRONG><a name="[92]"></a>USBDMAChannelIntEnable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb.o(i.USBDMAChannelIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelIntEnable
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelEnable
</UL>

<P><STRONG><a name="[95]"></a>USBDMAChannelIntStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb.o(i.USBDMAChannelIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBIntStatus
</UL>

<P><STRONG><a name="[94]"></a>USBDMAChannelStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usb.o(i.USBDMAChannelStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBChannelStatus
</UL>

<P><STRONG><a name="[5a]"></a>USBDescGet</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, usbdesc.o(i.USBDescGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USBDescGet
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
</UL>

<P><STRONG><a name="[59]"></a>USBDescGetNum</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usbdesc.o(i.USBDescGetNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBDescGetNum
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGet
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetNum
</UL>

<P><STRONG><a name="[86]"></a>USBDevAddrSet</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usb.o(i.USBDevAddrSet))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
</UL>

<P><STRONG><a name="[70]"></a>USBDevConnect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(i.USBDevConnect))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[88]"></a>USBDevDisconnect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(i.USBDevDisconnect))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>

<P><STRONG><a name="[83]"></a>USBDevEndpointConfigSet</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
</UL>

<P><STRONG><a name="[4a]"></a>USBDevEndpointDataAck</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointDataAck))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleRequest
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSyncFrame
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetInterface
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetFeature
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetDescriptor
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetConfiguration
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetAddress
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetStatus
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetInterface
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetDescriptor
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetConfiguration
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDClearFeature
</UL>

<P><STRONG><a name="[73]"></a>USBDevEndpointStall</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointStall))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDStallEP0
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSyncFrame
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetInterface
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetFeature
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetDescriptor
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetConfiguration
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDReadAndDispatchRequest
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetStatus
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetInterface
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetDescriptor
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDClearFeature
</UL>

<P><STRONG><a name="[74]"></a>USBDevEndpointStallClear</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointStallClear))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDClearFeature
</UL>

<P><STRONG><a name="[44]"></a>USBDevEndpointStatusClear</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, usb.o(i.USBDevEndpointStatusClear))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
</UL>

<P><STRONG><a name="[67]"></a>USBDevLPMConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb.o(i.USBDevLPMConfig))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[6a]"></a>USBDevLPMDisable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usb.o(i.USBDevLPMDisable))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[69]"></a>USBDevLPMEnable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usb.o(i.USBDevLPMEnable))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[66]"></a>USBDevMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb.o(i.USBDevMode))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[81]"></a>USBDeviceConfig</STRONG> (Thumb, 410 bytes, Stack size 112 bytes, usbdconfig.o(i.USBDeviceConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = USBDeviceConfig &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGet
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterfaceEndpoint
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetNum
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBFIFOConfigSet
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetConfiguration
</UL>

<P><STRONG><a name="[82]"></a>USBDeviceConfigAlternate</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, usbdconfig.o(i.USBDeviceConfigAlternate))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USBDeviceConfigAlternate &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterfaceEndpoint
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetNum
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointConfigSet
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDSetInterface
</UL>

<P><STRONG><a name="[85]"></a>USBDeviceEnumHandler</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, usbdenum.o(i.USBDeviceEnumHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = USBDeviceEnumHandler &rArr; USBDEP0StateTxConfig &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDReadAndDispatchRequest
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTxConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointStatus
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataGet
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStatusClear
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevAddrSet
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>

<P><STRONG><a name="[57]"></a>USBDeviceIntHandlerInternal</STRONG> (Thumb, 388 bytes, Stack size 32 bytes, usbdenum.o(i.USBDeviceIntHandlerInternal))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = USBDeviceIntHandlerInternal &rArr; USBDeviceEnumHandler &rArr; USBDEP0StateTxConfig &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InternalUSBStartOfFrameTick
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceResumeTickHandler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBLPMIntStatus
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBIntStatusEndpoint
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevLPMEnable
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevDisconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0DeviceIntHandler
</UL>

<P><STRONG><a name="[87]"></a>USBDeviceResumeTickHandler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, usbdenum.o(i.USBDeviceResumeTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBDeviceResumeTickHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBHostResume
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>

<P><STRONG><a name="[9f]"></a>USBEndpointDMAChannel</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usb.o(i.USBEndpointDMAChannel))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelAllocate
</UL>

<P><STRONG><a name="[99]"></a>USBEndpointDMAConfigSet</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, usb.o(i.USBEndpointDMAConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBTransfer
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBTransfer
</UL>

<P><STRONG><a name="[9c]"></a>USBEndpointDMADisable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usb.o(i.USBEndpointDMADisable))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelRelease
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelDisable
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelAllocate
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBTransfer
</UL>

<P><STRONG><a name="[9b]"></a>USBEndpointDMAEnable</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, usb.o(i.USBEndpointDMAEnable))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelEnable
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBTransfer
</UL>

<P><STRONG><a name="[42]"></a>USBEndpointDataAvail</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usb.o(i.USBEndpointDataAvail))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIDTickHandler
</UL>

<P><STRONG><a name="[80]"></a>USBEndpointDataGet</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, usb.o(i.USBEndpointDataGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USBEndpointDataGet
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDReadAndDispatchRequest
</UL>

<P><STRONG><a name="[45]"></a>USBEndpointDataPut</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, usb.o(i.USBEndpointDataPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USBEndpointDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDReportWrite
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTxConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
</UL>

<P><STRONG><a name="[46]"></a>USBEndpointDataSend</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, usb.o(i.USBEndpointDataSend))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDReportWrite
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTxConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
</UL>

<P><STRONG><a name="[98]"></a>USBEndpointPacketCountSet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb.o(i.USBEndpointPacketCountSet))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBTransfer
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iDMAUSBTransfer
</UL>

<P><STRONG><a name="[43]"></a>USBEndpointStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb.o(i.USBEndpointStatus))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
</UL>

<P><STRONG><a name="[a4]"></a>USBFIFOAddrGet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb.o(i.USBFIFOAddrGet))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBTransfer
</UL>

<P><STRONG><a name="[84]"></a>USBFIFOConfigSet</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, usb.o(i.USBFIFOConfigSet))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
</UL>

<P><STRONG><a name="[4d]"></a>USBHIDInit</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, usb_dev_gamepad.o(i.USBHIDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = USBHIDInit &rArr; USBDHIDGamepadInit &rArr; USBDHIDInit &rArr; USBDHIDCompositeInit &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBStackModeSet
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDGamepadInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PeripheralInit
</UL>

<P><STRONG><a name="[8b]"></a>USBHostResume</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usb.o(i.USBHostResume))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceResumeTickHandler
</UL>

<P><STRONG><a name="[6e]"></a>USBIntEnableControl</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usb.o(i.USBIntEnableControl))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[6f]"></a>USBIntEnableEndpoint</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usb.o(i.USBIntEnableEndpoint))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[56]"></a>USBIntStatusControl</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, usb.o(i.USBIntStatusControl))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0DeviceIntHandler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[6d]"></a>USBIntStatusEndpoint</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usb.o(i.USBIntStatusEndpoint))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[68]"></a>USBLPMIntEnable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb.o(i.USBLPMIntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[8a]"></a>USBLPMIntStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usb.o(i.USBLPMIntStatus))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceIntHandlerInternal
</UL>

<P><STRONG><a name="[6b]"></a>USBLibDMAInit</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, usbdma.o(i.USBLibDMAInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBLibDMAInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBControllerVersion
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[65]"></a>USBOTGMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb.o(i.USBOTGMode))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[8c]"></a>USBStackModeSet</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usbmode.o(i.USBStackModeSet))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBHIDInit
</UL>

<P><STRONG><a name="[64]"></a>USBULPIDisable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb.o(i.USBULPIDisable))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[63]"></a>USBULPIEnable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb.o(i.USBULPIEnable))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDInit
</UL>

<P><STRONG><a name="[54]"></a>USBULPIRegRead</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usb.o(i.USBULPIRegRead))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ULPIConfigSet
</UL>

<P><STRONG><a name="[55]"></a>USBULPIRegWrite</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usb.o(i.USBULPIRegWrite))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ULPIConfigSet
</UL>

<P><STRONG><a name="[b3]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b4]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b5]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[6]"></a>main</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, usb_dev_gamepad.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = main &rArr; Init_PeripheralInit &rArr; USBHIDInit &rArr; USBDHIDGamepadInit &rArr; USBDHIDInit &rArr; USBDHIDCompositeInit &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDGamepadSendReport
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterEnable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntMasterDisable
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SystemInit
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PeripheralInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetButtons
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[a0]"></a>uDMAChannelAttributeDisable</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, udma.o(i.uDMAChannelAttributeDisable))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelRelease
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelAllocate
</UL>

<P><STRONG><a name="[9e]"></a>uDMAChannelControlSet</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, udma.o(i.uDMAChannelControlSet))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBUnitSizeSet
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelAllocate
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBArbSizeSet
</UL>

<P><STRONG><a name="[a1]"></a>uDMAChannelDisable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, udma.o(i.uDMAChannelDisable))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelDisable
</UL>

<P><STRONG><a name="[a2]"></a>uDMAChannelEnable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, udma.o(i.uDMAChannelEnable))
<BR><BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelEnable
</UL>

<P><STRONG><a name="[a3]"></a>uDMAChannelModeGet</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, udma.o(i.uDMAChannelModeGet))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBIntStatus
</UL>

<P><STRONG><a name="[a5]"></a>uDMAChannelTransferSet</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, udma.o(i.uDMAChannelTransferSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uDMAChannelTransferSet
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBTransfer
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2]"></a>NmiSR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NmiSR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>FaultISR</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FaultISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>IntDefaultHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_rvmdk.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDefaultHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rvmdk.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>HIDGamepadRxHandler</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, usbdhidgamepad.o(i.HIDGamepadRxHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HIDGamepadRxHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhidgamepad.o(i.USBDHIDGamepadCompositeInit)
</UL>
<P><STRONG><a name="[8]"></a>HIDGamepadTxHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbdhidgamepad.o(i.HIDGamepadTxHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HIDGamepadTxHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhidgamepad.o(i.USBDHIDGamepadCompositeInit)
</UL>
<P><STRONG><a name="[24]"></a>USBDClearFeature</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, usbdenum.o(i.USBDClearFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBDClearFeature
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStallClear
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>USBDEP0StateTx</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, usbdenum.o(i.USBDEP0StateTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataSend
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDSendDataEP0
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetStatus
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetInterface
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetDescriptor
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetConfiguration
</UL>

<P><STRONG><a name="[75]"></a>USBDEP0StateTxConfig</STRONG> (Thumb, 358 bytes, Stack size 48 bytes, usbdenum.o(i.USBDEP0StateTxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USBDEP0StateTxConfig &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetSize
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataSend
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataPut
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDGetDescriptor
</UL>

<P><STRONG><a name="[29]"></a>USBDGetConfiguration</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, usbdenum.o(i.USBDGetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USBDGetConfiguration &rArr; USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>USBDGetDescriptor</STRONG> (Thumb, 354 bytes, Stack size 40 bytes, usbdenum.o(i.USBDGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = USBDGetDescriptor &rArr; USBDEP0StateTxConfig &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetSize
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTxConfig
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[2b]"></a>USBDGetInterface</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, usbdenum.o(i.USBDGetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USBDGetInterface &rArr; USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[23]"></a>USBDGetStatus</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, usbdenum.o(i.USBDGetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USBDGetStatus &rArr; USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDEP0StateTx
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>USBDReadAndDispatchRequest</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, usbdenum.o(i.USBDReadAndDispatchRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USBDReadAndDispatchRequest &rArr; USBEndpointDataGet
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataGet
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceEnumHandler
</UL>

<P><STRONG><a name="[26]"></a>USBDSetAddress</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usbdenum.o(i.USBDSetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBDSetAddress
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[2a]"></a>USBDSetConfiguration</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, usbdenum.o(i.USBDSetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = USBDSetConfiguration &rArr; USBDeviceConfig &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfig
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[28]"></a>USBDSetDescriptor</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbdenum.o(i.USBDSetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBDSetDescriptor
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[25]"></a>USBDSetFeature</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, usbdenum.o(i.USBDSetFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBDSetFeature
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[2c]"></a>USBDSetInterface</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, usbdenum.o(i.USBDSetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = USBDSetInterface &rArr; USBDeviceConfigAlternate &rArr; USBDCDConfigGetInterfaceEndpoint &rArr; USBDCDConfigGetInterface &rArr; USBDescGet
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDeviceConfigAlternate
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigGetInterface
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDConfigDescGetNum
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[2d]"></a>USBDSyncFrame</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbdenum.o(i.USBDSyncFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBDSyncFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStall
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdenum.o(.constdata)
</UL>
<P><STRONG><a name="[7]"></a>HIDTickHandler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, usbdhid.o(i.HIDTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HIDTickHandler &rArr; ProcessIdleTimers &rArr; USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIdleTimers
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataAvail
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(i.USBDHIDCompositeInit)
</UL>
<P><STRONG><a name="[30]"></a>HandleConfigChange</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, usbdhid.o(i.HandleConfigChange))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HandleConfigChange
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>HandleDevice</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, usbdhid.o(i.HandleDevice))
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>HandleDisconnect</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbdhid.o(i.HandleDisconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HandleDisconnect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>HandleEP0DataReceived</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, usbdhid.o(i.HandleEP0DataReceived))
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>HandleEP0DataSent</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usbdhid.o(i.HandleEP0DataSent))
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>HandleEndpoints</STRONG> (Thumb, 284 bytes, Stack size 32 bytes, usbdhid.o(i.HandleEndpoints))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HandleEndpoints &rArr; ProcessIdleTimers &rArr; USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIdleTimers
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointStatus
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataSend
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataPut
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDataAvail
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointStatusClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[2e]"></a>HandleGetDescriptor</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, usbdhid.o(i.HandleGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HandleGetDescriptor &rArr; USBDCDSendDataEP0 &rArr; USBDEP0StateTx &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDStallEP0
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDSendDataEP0
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>HandleRequest</STRONG> (Thumb, 412 bytes, Stack size 32 bytes, usbdhid.o(i.HandleRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HandleRequest &rArr; ProcessIdleTimers &rArr; USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessIdleTimers
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDStallEP0
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDSendDataEP0
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDCDRequestDataEP0
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDevEndpointDataAck
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>HandleReset</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbdhid.o(i.HandleReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HandleReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>HandleResume</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbdhid.o(i.HandleResume))
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>HandleSuspend</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbdhid.o(i.HandleSuspend))
<BR>[Address Reference Count : 1]<UL><LI> usbdhid.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>ProcessIdleTimers</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, usbdhid.o(i.ProcessIdleTimers))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ProcessIdleTimers &rArr; USBDHIDReportWrite &rArr; USBEndpointDataPut
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDHIDReportWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleRequest
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleEndpoints
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HIDTickHandler
</UL>

<P><STRONG><a name="[12]"></a>DMAUSBIntHandler</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, usbdma.o(i.DMAUSBIntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DMAUSBIntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[14]"></a>DMAUSBIntStatusClear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbdma.o(i.DMAUSBIntStatusClear))
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[15]"></a>DMAUSBStatus</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbdma.o(i.DMAUSBStatus))
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[18]"></a>iDMAUSBArbSizeSet</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbdma.o(i.iDMAUSBArbSizeSet))
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[19]"></a>iDMAUSBChannelAllocate</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, usbdma.o(i.iDMAUSBChannelAllocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = iDMAUSBChannelAllocate
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelDisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[21]"></a>iDMAUSBChannelDisable</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usbdma.o(i.iDMAUSBChannelDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iDMAUSBChannelDisable
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelIntDisable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelDisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[20]"></a>iDMAUSBChannelEnable</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, usbdma.o(i.iDMAUSBChannelEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iDMAUSBChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntIsEnabled
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelIntEnable
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[1d]"></a>iDMAUSBChannelIntDisable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbdma.o(i.iDMAUSBChannelIntDisable))
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelIntDisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[1c]"></a>iDMAUSBChannelIntEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbdma.o(i.iDMAUSBChannelIntEnable))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelIntEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[1f]"></a>iDMAUSBChannelRelease</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usbdma.o(i.iDMAUSBChannelRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iDMAUSBChannelRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelDisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[1a]"></a>iDMAUSBChannelStatus</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, usbdma.o(i.iDMAUSBChannelStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iDMAUSBChannelStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[1b]"></a>iDMAUSBIntStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbdma.o(i.iDMAUSBIntStatus))
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelIntStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[1e]"></a>iDMAUSBTransfer</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, usbdma.o(i.iDMAUSBTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = iDMAUSBTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointPacketCountSet
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDMAEnable
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDMADisable
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDMAConfigSet
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelEnable
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelCountSet
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelConfigSet
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBDMAChannelAddressSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[22]"></a>iDMAUSBUnitSizeSet</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbdma.o(i.iDMAUSBUnitSizeSet))
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[a]"></a>uDMAUSBArbSizeSet</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, usbdma.o(i.uDMAUSBArbSizeSet))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelControlSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[b]"></a>uDMAUSBChannelAllocate</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, usbdma.o(i.uDMAUSBChannelAllocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uDMAUSBChannelAllocate
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelControlSet
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelAttributeDisable
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDMADisable
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDMAChannel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[c]"></a>uDMAUSBChannelDisable</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, usbdma.o(i.uDMAUSBChannelDisable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uDMAUSBChannelDisable
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelDisable
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDMADisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[d]"></a>uDMAUSBChannelEnable</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, usbdma.o(i.uDMAUSBChannelEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uDMAUSBChannelEnable
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntIsEnabled
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntEnable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IntDisable
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelEnable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDMAEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[f]"></a>uDMAUSBChannelIntDisable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbdma.o(i.uDMAUSBChannelIntDisable))
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[e]"></a>uDMAUSBChannelIntEnable</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbdma.o(i.uDMAUSBChannelIntEnable))
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[10]"></a>uDMAUSBChannelRelease</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, usbdma.o(i.uDMAUSBChannelRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uDMAUSBChannelRelease
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelAttributeDisable
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDMADisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[11]"></a>uDMAUSBChannelStatus</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, usbdma.o(i.uDMAUSBChannelStatus))
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[13]"></a>uDMAUSBIntStatus</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, usbdma.o(i.uDMAUSBIntStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uDMAUSBIntStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelModeGet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[16]"></a>uDMAUSBTransfer</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, usbdma.o(i.uDMAUSBTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uDMAUSBTransfer &rArr; uDMAChannelTransferSet
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelTransferSet
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAUSBChannelEnable
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBFIFOAddrGet
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointPacketCountSet
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBEndpointDMAConfigSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL>
<P><STRONG><a name="[17]"></a>uDMAUSBUnitSizeSet</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, usbdma.o(i.uDMAUSBUnitSizeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uDMAUSBUnitSizeSet
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uDMAChannelControlSet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbdma.o(i.USBLibDMAInit)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
